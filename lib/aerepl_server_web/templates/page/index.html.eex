<div class="row">
    <div class="column" id="main-block">
        <h3>Type some Sophia here!</h3>

        <div class="code">
            <ul id="outputs"></ul>

            <div>
                <span id="prompt">Loading prompt...</span>
                <textarea id="query-input" autocomplete="off" rows="1"></textarea>

                <div id="buttons" class="row phone-only">
                    <button type="button" class="column" id="new-line">new line</button>
                    <button type="button" class="column" id="submit">submit</button>
                </div>
                <h4>Local contract editor</h3>
                    <div id="contract-editor">
                        <textarea id="editor" autocomplete="off">
                            <%=
                            "main contract Counter =\n" <>
                            "  type state = int\n" <>
                            "  entrypoint init() = 0\n" <>
                            "  entrypoint get() = state\n" <>
                            "  stateful entrypoint incr() = put(state + 1)\n"
                            %></textarea>
                        <div class="row">
                            <button class="column" type="button" id="load">Load</button>
                        </div>
                    </div>

            </div>
        </div>

        <hr>

        Basic usage:

        <ul>
            <li>
                Type some expression, like <code>2 + 2</code>. You should get the <code>4</code> answer
            </li>

            <li>
                To check the type of some value, prepend the query with <code>:t</code>,
                like <code>:t 2 + 2</code>
            </li>

                If you want to insert new line without sending the query use <code>shift</code> + <code>enter</code>
            </li>

            <li class="phone-only">
                If you want to insert new line without sending the query use the <code>new line</code> button
            </li>

            <li>
                Define values, functions and types like you would normally do in Sophia:
                <ul>
                    <li> <code> let x = 2 </code> </li>
                    <li> <code> type endomorphism('a) = ('a) => 'a </code> </li>
                    <li> <code> record anti_bool = {true : unit, false : unit} </code> </li>
                </ul>
            </li>

            <li>
                The REPL is currently not connected to any public network, so it won't be able to interact with any real contracts.
                It also doesn't store any history, so you may want to backup your session manually.
            </li>

        </ul>

    </div>
</div>


<p>
<sub> (Note, this is a beta version. Treat it more like a toy) </sub>
</p>
<sup><sup>Support the creator: ak_n84pX8BJsthdZ6XHfki8vSFZsV5EaZjCPCX9iBQ8xRYeefGRo</sup></sup>
