<div class="row">

    <div class="pc-only column" id="autocompletion-block">
        Possible completions:
        <hr>
        <ul id="completion-list"></ul>
    </div>

    <div class="column" id="main-block">
        <h3>Type some Sophia here!</h3>

        <div class="code">
            <ul id="outputs"></ul>

            <div>
                <textarea id="query-input" autocomplete="off" rows="1"></textarea>

                <div id="buttons" class="row phone-only">
                    <button type="button" class="column" id="autocomplete">autocomplete</button>
                    <button type="button" class="column" id="submit">submit</button>
                    <button type="button" class="column" id="new-line">new line</button>
                </div>

                <div id="contract-editor">
                    <textarea id="query-input" autocomplete="off"></textarea>
                    <button type="button" id="deploy">deploy</button>
                </div>
            </div>
        </div>

        <hr>

        Basic usage:

        <ul>
            <li>
                Type some expression, like <code>2 + 2</code>. You should get the <code>4</code> answer
            </li>

            <li>
                To check the type of some value, prepend the query with <code>:t</code>,
                like <code>:t 2 + 2</code>
            </li>

            <li class="pc-only">
                For the autocompletion press <code>ctrl</code> + <code>space</code>
            </li>

            <li class="phone-only">
                For the autocompletion press the <code>autocomplete</code> button
            </li>

            <li class="pc-only">
                If you want to insert new line without sending the query use <code>shift</code> + <code>enter</code>
            </li>

            <li class="phone-only">
                If you want to insert new line without sending the query use the <code>new line</code> button
            </li>

            <li>
                You can import standard library files by the standard <code>include</code> directive, or the
                <code>:include</code> command. Try <code>include "List.aes"</code> or <code>:include List.aes</code>
            </li>

            <li>
                Define values, functions and types like you would normally do in Sophia:
                <ul>
                    <li> <code> let x = 2 </code> </li>
                    <li> <code> function f(y) = x + y </code> </li>
                    <li> <code> type endomorphism('a) = ('a) => 'a </code> </li>
                    <li> <code> record anti_bool = {true : unit, false : unit} </code> </li>
                </ul>
            </li>

            <li>
                REPL commands (these you prepend with <code>:</code>) can be usually shortened, so <code>:include</code>
                means the same as <code>:inc</code>
            </li>


            <li>
                The REPL is currently not connected to any public network, so it won't be able to interact with any real contracts.
                It also doesn't store any history, so you may want to backup your session manually.
            </li>

        </ul>

    </div>
</div>


<p>
<sub> (Note, this is a beta version. Treat it more like a toy) </sub>
</p>
<sup><sup>Support the creator: ak_n84pX8BJsthdZ6XHfki8vSFZsV5EaZjCPCX9iBQ8xRYeefGRo</sup></sup>
